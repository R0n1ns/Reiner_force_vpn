<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Регистрация</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f0f8ff;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
        }

        .form {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 300px;
        }

        .form h2 {
            color: #008080;
            margin-bottom: 20px;
        }

        .form input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #008080;
            border-radius: 5px;
            outline: none;
        }

        .form button {
            background-color: #008080;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            margin-top: 10px;
        }

        .form button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .form button:hover:not(:disabled) {
            background-color: #005f5f;
        }

        .error-message {
            color: red;
            font-size: 12px;
            margin-top: 10px;
        }

        .login-link {
            display: block;
            margin-top: 15px;
            font-size: 12px;
            color: #0000ff;
            text-decoration: none;
        }

        .login-link:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
<div class="container">
    <form id="registrationForm" class="form">
        <h2>Регистрация</h2>
        <input type="email" id="email" placeholder="Введите email" required>
        <input type="password" id="password" placeholder="Введите пароль" required>
        <button type="button" id="telegramButton" disabled>Подтвердить через Telegram</button>
        <button type="button" id="registerButton" disabled>Завершить регистрацию</button>
        <p id="error-message" class="error-message"></p>
        <a href="/user/authorization" class="login-link">Войти</a>
    </form>
</div>

<script>
    let key = null; // Для хранения ключа подтверждения

    document.getElementById("email").addEventListener("input", function () {
        const email = this.value;
        const telegramButton = document.getElementById("telegramButton");

        // Активируем кнопку Telegram, если email валидный
        if (email.trim() !== "") {
            telegramButton.disabled = false;
        } else {
            telegramButton.disabled = true;
        }
    });

    document.getElementById("telegramButton").addEventListener("click", async function () {
        const email = document.getElementById("email").value;
        const errorMessage = document.getElementById("error-message");

        try {
            const response = await fetch("/generate-key", {
                method: "POST",
                headers: { "Content-Type": "application/json" }});

            const result = await response.json();

            if (result.success) {
                const telegramLink = result.telegram_link;
                key = result.key; // Сохраняем ключ

                window.open(telegramLink, "_blank");

                // Ожидание подтверждения
                await checkKeyConfirmation(key);
            } else {
                errorMessage.textContent = result.message || "Ошибка при генерации ключа.";
            }
        } catch (error) {
            errorMessage.textContent = "Ошибка сети. Попробуйте снова.";
        }
    });

    async function checkKeyConfirmation(key) {
        const errorMessage = document.getElementById("error-message");
        const telegramButton = document.getElementById("telegramButton");
        const registerButton = document.getElementById("registerButton");

        try {
            const interval = setInterval(async () => {
                const response = await fetch(`/check-key?key=${key}`);
                const result = await response.json();

                if (result.confirmed) {
                    clearInterval(interval);

                    telegramButton.textContent = "Telegram подтвержден";
                    telegramButton.style.backgroundColor = "green";
                    telegramButton.disabled = true;
                    registerButton.disabled = false;
                }
            }, 3000);
        } catch (error) {
            errorMessage.textContent = "Ошибка при проверке подтверждения.";
        }
    }

    document.getElementById("registerButton").addEventListener("click", async function () {
        const email = document.getElementById("email").value;
        const password = document.getElementById("password").value;
        const errorMessage = document.getElementById("error-message");

        if (!key) {
            errorMessage.textContent = "Ключ не подтверждён.";
            return;
        }

        try {
            const response = await fetch("/finalize-registration", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email, password, key })
            });

            const result = await response.json();

            if (result.success) {
                window.location.href = "/user/dashboard";
            } else {
                errorMessage.textContent = result.message || "Ошибка при регистрации.";
            }
        } catch (error) {
            errorMessage.textContent = "Ошибка сети. Попробуйте снова.";
        }
    });
</script>
</body>
</html>
